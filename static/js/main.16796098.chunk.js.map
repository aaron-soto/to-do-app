{"version":3,"sources":["components/SimpleDialog.js","components/Form.js","components/ListCo.js","App.js","index.js"],"names":["SimpleDialog","onClose","open","Dialog","className","aria-labelledby","fullWidth","DialogTitle","id","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","Form","setInput","todos","setTodos","editTodo","setEditTodo","React","useState","setOpen","classes","useEffect","title","Paper","component","onSubmit","event","preventDefault","completed","newTodo","map","todo","updateTodo","uuidv4","autoComplete","noValidate","InputBase","placeholder","inputProps","value","onChange","target","IconButton","aria-label","onClick","Divider","orientation","color","type","ListCo","List","dense","style","ListItem","role","undefined","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","item","handleComplete","iconStyle","fill","readOnly","ListItemSecondaryAction","marginRight","findTodo","find","handleEdit","filter","handleDelete","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16796098.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst SimpleDialog = ({ onClose, open }) => {\r\n\tconst handleClose = () => {\r\n\t\tonClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tclassName=\"dialog\"\r\n\t\t\tonClose={handleClose}\r\n\t\t\taria-labelledby=\"simple-dialog-title\"\r\n\t\t\topen={open}\r\n\t\t\tfullWidth={true}\r\n\t\t>\r\n\t\t\t<DialogTitle id=\"simple-dialog-title\">Settings</DialogTitle>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default SimpleDialog;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport \"../App.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DirectionsIcon from \"@material-ui/icons/Directions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport SimpleDialog from \"./SimpleDialog\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tpadding: \"2px 4px\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: 400,\r\n\t},\r\n\tinput: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tflex: 1,\r\n\t},\r\n\ticonButton: {\r\n\t\tpadding: 10,\r\n\t},\r\n\tdivider: {\r\n\t\theight: 28,\r\n\t\tmargin: 4,\r\n\t},\r\n}));\r\n\r\nconst Form = ({ input, setInput, todos, setTodos, editTodo, setEditTodo }) => {\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (editTodo) {\r\n\t\t\tsetInput(editTodo.title);\r\n\t\t} else {\r\n\t\t\tsetInput(\"\");\r\n\t\t}\r\n\t}, [setInput, editTodo]);\r\n\r\n\tconst onInputChange = (event) => {\r\n\t\tsetInput(event.target.value);\r\n\t};\r\n\r\n\tconst updateTodo = (title, id, completed) => {\r\n\t\tconst newTodo = todos.map((todo) =>\r\n\t\t\ttodo.id === id ? { title, id, completed } : todo\r\n\t\t);\r\n\t\tsetTodos(newTodo);\r\n\t\tsetEditTodo(\"\");\r\n\t};\r\n\r\n\tconst onFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!editTodo) {\r\n\t\t\tif (input !== \"\") {\r\n\t\t\t\tsetTodos([...todos, { id: uuidv4(), title: input, completed: false }]);\r\n\t\t\t\tsetInput(\"\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tupdateTodo(input, editTodo.id, editTodo.completed);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tcomponent=\"form\"\r\n\t\t\tonSubmit={onFormSubmit}\r\n\t\t\tautoComplete=\"off\"\r\n\t\t\tnoValidate\r\n\t\t\tclassName={classes.root}\r\n\t\t>\r\n\t\t\t<InputBase\r\n\t\t\t\tclassName={classes.input}\r\n\t\t\t\tid=\"Input\"\r\n\t\t\t\tplaceholder=\"Add a task\"\r\n\t\t\t\tinputProps={{ \"aria-label\": \"Add a task\" }}\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tonChange={onInputChange}\r\n\t\t\t/>\r\n\t\t\t<IconButton\r\n\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\taria-label=\"task-settings\"\r\n\t\t\t\tonClick={() => handleClickOpen()}\r\n\t\t\t>\r\n\t\t\t\t<SettingsIcon />\r\n\t\t\t</IconButton>\r\n\t\t\t<Divider className={classes.divider} orientation=\"vertical\" />\r\n\t\t\t<IconButton\r\n\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\tclassName={classes.iconButton}\r\n\t\t\t\taria-label=\"add-task\"\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t>\r\n\t\t\t\t{editTodo ? <DoneIcon /> : <AddIcon />}\r\n\t\t\t</IconButton>\r\n\t\t\t<SimpleDialog open={open} onClose={handleClose} />\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst ListCo = ({ todos, setTodos, setEditTodo }) => {\r\n\tconst handleDelete = ({ id }) => {\r\n\t\tsetTodos(todos.filter((todo) => todo.id !== id));\r\n\t};\r\n\r\n\tconst handleComplete = (todo) => {\r\n\t\tsetTodos(\r\n\t\t\ttodos.map((item) => {\r\n\t\t\t\tif (item.id === todo.id) {\r\n\t\t\t\t\treturn { ...item, completed: !item.completed };\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleEdit = ({ id }) => {\r\n\t\tconst findTodo = todos.find((todo) => todo.id === id);\r\n\t\tsetEditTodo(findTodo);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List className=\"list\" dense={true}>\r\n\t\t\t{todos.map((todo) => (\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tmargin: \"5px 0\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItem key={todo.id} role={undefined} dense button>\r\n\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": todo.id }}\r\n\t\t\t\t\t\t\t\tonClick={() => handleComplete(todo)}\r\n\t\t\t\t\t\t\t\ticonStyle={{ fill: \"red\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t{/* <ListItemText id={todo.id} primary={todo.title} /> */}\r\n\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\tclassName=\"input-field\"\r\n\t\t\t\t\t\t\tvalue={todo.title}\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tstyle={{ marginRight: 10 }}\r\n\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\taria-label=\"comments\"\r\n\t\t\t\t\t\t\t\tonClick={() => handleEdit(todo)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\taria-label=\"comments\"\r\n\t\t\t\t\t\t\t\tonClick={() => handleDelete(todo)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</Paper>\r\n\t\t\t))}\r\n\t\t</List>\r\n\t);\r\n};\r\n\r\nexport default ListCo;\r\n\r\n{\r\n\t/* <div className=\"list\">\r\n\t{todos.map((todos) => {\r\n\t\t<li></li>;\r\n\t})}\r\n</div>; */\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport ListCo from \"./components/ListCo\";\n\nfunction App() {\n\tconst [input, setInput] = useState(\"\");\n\tconst [todos, setTodos] = useState([]);\n\tconst [editTodo, setEditTodo] = useState(null);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Form\n\t\t\t\tinput={input}\n\t\t\t\tsetInput={setInput}\n\t\t\t\ttodos={todos}\n\t\t\t\tsetTodos={setTodos}\n\t\t\t\teditTodo={editTodo}\n\t\t\t\tsetEditTodo={setEditTodo}\n\t\t\t/>\n\t\t\t<ListCo\n\t\t\t\ttodos={todos}\n\t\t\t\teditTodo={editTodo}\n\t\t\t\tsetTodos={setTodos}\n\t\t\t\tsetEditTodo={setEditTodo}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}